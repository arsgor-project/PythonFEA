import numpy as np


E = 1; A = 1; EA = E*A;  Iy = 1; Iz = 1; G = 0.5; J = 1; 
L = 2

k1 = E*A/L
k2 = 12*E*Iz/(L*L*L)
k3 = 6*E*Iz/(L*L)
k4 = 4*E*Iz/L
k5 = 2*E*Iz/L
k6 = 12*E*Iy/L**3
k7 = 6*E*Iy/L**2
k8 = 4*E*Iy/L 
k9 = 2*E*Iy/L 
k10 = G*J/L


# ux, uy, uz, theta_x, fi_y, fi_z

LocalK = np.array( [[k1, -k1, 0, 0,    0,    0,    0, 0,     0, 0,   0, 0], \
                    [-k1, k1, 0, 0,    0,    0,    0, 0,     0, 0,   0, 0], \
                    [0, 0,    k2, -k2, 0,    0,    0, 0,     0, 0,   k3, k3], \
                    [0, 0,   -k2,  k2, 0,    0,    0, 0,     0, 0,  -k3, -k3], \
                    [0, 0,     0, 0,   k6, -k6,    0, 0,   -k7, -k7, 0, 0], \
                    [0, 0,     0, 0,  -k6,  k6,    0, 0,    k7, k7,  0, 0], \
                    [0, 0,     0, 0,    0,   0,  k10, -k10, 0,   0, 0, 0], \
                    [0, 0,     0, 0,    0,   0, -k10,  k10, 0,   0, 0, 0], \
                    [0, 0,     0, 0,   - k7,  k7,    0,    0, k8, k9, 0, 0], \
                    [0, 0,     0, 0,   - k7,  k7,    0,    0, k9, k8, 0, 0], \
                    [0, 0,    k3, -k3,    0,   0,    0,    0,  0,  0, k4, k5], \
                    [0, 0,    k3, -k3,    0,   0,    0,    0,  0,  0, k5, k4]  ])

LocalK[[0,2,4,6,8,10],:] = 0
LocalK[[0,2,4,6,8,10], [0,2,4,6,8,10]]= 1
cond = np.linalg.cond(LocalK)
print(LocalK)
print(cond)